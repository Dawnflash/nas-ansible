version: "2.1"
services:
  plex:
    image: plexinc/pms-docker
    container_name: plex
    restart: unless-stopped
    environment:
      - TZ={{ timezone }}
      - PLEX_UID={{ unprivileged_user_reg.uid }}
      - PLEX_GID={{ unprivileged_user_reg.group }}
        # Home network, Docker bridge network
      - ALLOWED_NETWORKS=192.168.0.0/24,172.20.0.0/24
      - VERSION=docker
    volumes:
      - "{{ ssd_storage.root }}/plex:/config"
      - "{{ ssd_storage.root }}/plex:/transcode"
      - /Master/Media:/Media
    network_mode: host
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: "{{ unprivileged_user_reg.uid }}:{{ unprivileged_user_reg.group }}"
    restart: unless-stopped
    volumes:
      - "{{ ssd_storage.root }}/jellyfin/config:/config"
      - "{{ ssd_storage.root }}/jellyfin/cache:/cache"
      - "/Master/Media:/media"
    environment:
      - JELLYFIN_PublishedServerUrl=https://jellyfin.{{ hostname }}
    ports:
      - 127.0.0.1:8096:8096
  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
      - WEBUI_PORT=58847
    volumes:
      - "{{ ssd_storage.root }}/qbittorrent:/config"
      - "{{ ssd_storage.root }}/downloads:/downloads"
    network_mode: host # to enable active P2P connections and avoid IPv6 NAT
  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/tautulli:/config"
      - "{{ ssd_storage.root }}/plex/Library/Application Support/Plex Media Server/Logs:/logs"
    ports:
      - 127.0.0.1:8181:8181
    networks:
      media:
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/bazarr:/config"
      - /Master/Media/Movies:/movies
      - /Master/Media/Series:/tv
    ports:
      - 127.0.0.1:6767:6767
    networks:
      media:
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/radarr:/config"
      - /Master/Media/Movies:/movies
      - "{{ ssd_storage.root }}/downloads:/downloads"
    ports:
      - 127.0.0.1:7878:7878
    networks:
      media:
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/sonarr:/config"
      - /Master/Media/Series:/tv
      - "{{ ssd_storage.root }}/downloads:/downloads"
    ports:
      - 127.0.0.1:8989:8989
    networks:
      media:
  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/lidarr:/config"
      - /Master/Media/Music:/music
      - "{{ ssd_storage.root }}/downloads:/downloads"
    ports:
      - 127.0.0.1:8686:8686
    networks:
      media:
  readarr:
    image: linuxserver/readarr:nightly
    container_name: readarr
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/readarr:/config"
      - "{{ ssd_storage.root }}/downloads:/downloads"
      - /Master/Media/Books:/books
    ports:
      - 127.0.0.1:8787:8787
    networks:
      media:
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/prowlarr:/config"
    ports:
      - 127.0.0.1:9696:9696
    networks:
      media:
  # pihole:
  #   container_name: pihole
  #   image: pihole/pihole:latest
  #   restart: unless-stopped
  #   environment:
  #     TZ: {{ timezone }}
  #     VIRTUAL_HOST: pihole.{{ hostname }}
  #     ServerIP: {{ network.ipv4 }}
  #     ServerIPv6: {{ network.ipv6 }}
  #     PIHOLE_DNS_: 1.1.1.1;8.8.8.8
  #     # WEBPASSWORD: 'set a secure password here or it will be random'
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     - "{{ ssd_storage.root }}/dns/pihole:/etc/pihole"
  #     - "{{ ssd_storage.root }}/dns/dnsmasq:/etc/dnsmasq.d"
  #   ports:
  #     - 53:53
  #     - 53:53/udp
  #     - 127.0.0.1:8080:80
  #   networks:
  #     media:
  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/nzbget:/config"
      - "{{ ssd_storage.root }}/downloads:/downloads"
    ports:
      - 127.0.0.1:6789:6789
    networks:
      media:
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/ombi:/config"
    ports:
      - 127.0.0.1:3579:3579
    networks:
      media:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    user: "{{ unprivileged_user_reg.uid }}:{{ unprivileged_user_reg.group }}"
    environment:
      - TZ={{ timezone }}
      - IP_HEADER=X-Real-IP
      - WEBSOCKET_ENABLED=true
      - WEBSOCKET_PORT=12005
      - LOG_FILE=/data/bitwarden.log
      - LOG_LEVEL=warn
      - SIGNUPS_ALLOWED=true
      - ADMIN_TOKEN={{ bitwarden.admin_token }}
      - DOMAIN=https://bitwarden.{{ hostname }}
      - ROCKET_PORT=12004
    volumes:
      - "{{ ssd_storage.root }}/bitwarden:/data"
    ports:
      - 127.0.0.1:12004:12004
      - 127.0.0.1:12005:12005
    networks:
      media:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    user: "{{ unprivileged_user_reg.uid }}:{{ unprivileged_user_reg.group }}"
    volumes:
      - "{{ ssd_storage.root }}/grafana:/var/lib/grafana"
    ports:
      - 127.0.0.1:3000:3000
    networks:
      media:
  rarbg:
    image: ghcr.io/mgdigital/rarbg-selfhosted:latest
    container_name: rarbg
    restart: unless-stopped
    user: "{{ unprivileged_user_reg.uid }}:{{ unprivileged_user_reg.group }}"
    environment:
      - PATH_SQLITE_DB=/rarbg/rarbg_db.sqlite
      - PATH_TRACKERS=/rarbg/trackers.txt
      # - DEBUG=1
    volumes:
      - "/ssd-data/rarbg:/rarbg:ro"
    networks:
      media:
  syncthing:
    image: lscr.io/linuxserver/syncthing:latest
    container_name: syncthing
    restart: unless-stopped
    environment:
      - PUID={{ unprivileged_user_reg.uid }}
      - PGID={{ unprivileged_user_reg.group }}
      - TZ={{ timezone }}
    volumes:
      - "{{ ssd_storage.root }}/syncthing:/config"
      - /Master/Random/Sync:/sync/Main
    ports:
      - 127.0.0.1:8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp

networks:
  media:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
        - subnet: fd14::/112
          gateway: fd14::1
