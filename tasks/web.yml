- block:
  - name: Check for LE conf for {{ hostname }}
    stat:
      path: /etc/letsencrypt/renewal/{{ hostname }}.conf
    register: le_conf

  - name: Configure LE cert for {{ hostname }}
    command: |
      certbot certonly {{ certbot_flags }} -n \
      -d {{ hostname }} -d "*.{{ hostname }}" \
      --agree-tos --email {{ email.recipients.dawn }} \
      --post-hook /root/bin/cert_postrenew.sh \
      --dns-cloudflare --dns-cloudflare-credentials {{ private_dir }}/cloudflare_dawnflash.cz.ini
    when: not le_conf.stat.exists
    register: le_cert_reg

  - name: Warn about failing hook
    debug:
      msg:
        - LE post-hook failed. This is likely caused by SSH issues.
        - Consult /var/log/letsencrypt/letsencrypt.log
        - Rerun the hook later to ensure proxy certificates are in sync.
    when:
      - '"stderr" in le_cert_reg'
      - '"Error output from post-hook command" in le_cert_reg.stderr'

- name: Create web-related directories
  file:
    path: "{{ item.value }}"
    state: directory
  loop: "{{ nginx.paths | dict2items }}"

- name: Sync landing HTML files
  template:
    src: "{{ item }}"
    dest: "{{ nginx.paths.html }}"
  with_fileglob: "templates/nginx/html/*"

- block:
  - name: Install static nginx configuration
    template:
      src: "{{ item }}"
      dest: "{{ avail_dir }}"
    with_fileglob: "templates/nginx/conf/static/*"
    register: nginx_conf_static

  - name: Enable static nginx configuration
    file:
      src: "{{ avail_dir }}/{{ item | basename }}"
      dest: "{{ enabl_dir }}/{{ item | basename }}"
      state: link
    with_fileglob: "templates/nginx/conf/static/*"

  - name: Install proxy nginx configuration
    template:
      src: nginx/conf/proxy.conf
      dest: "{{ avail_dir }}/proxy"
    register: nginx_conf_proxy

  - name: Enable proxy nginx configuration
    file:
      src: "{{ avail_dir }}/proxy"
      dest: "{{ enabl_dir }}/proxy"
      state: link

  vars:
    avail_dir: /etc/nginx/sites-available
    enabl_dir: /etc/nginx/sites-enabled

- name: Reload nginx
  systemd:
    name: nginx
    state: reloaded
  when: nginx_conf_static.changed or nginx_conf_proxy.changed
